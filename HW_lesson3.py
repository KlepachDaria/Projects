# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

# 1 вариант выполнения задания 1. Насколько я поняла, это верный, так как нужно задать именно позиционные аргументы
def s_calc(value_1=1, value_2=2):
    """Возвращает частное от деления.
        Прверяет ошибку деления на ноль.
        В случае, если она происходит, программа выдает предупреждение.

        Именованные параметры:
        value_1 -- делимое (по умолчанию 1.0)
        value_2 -- делитель (по умолчанию 2.0)

    """

    try:
        div = value_1 / value_2
        return div
    except ZeroDivisionError:
        print("Нельзя делить на ноль!")


val_1 = float(input("Введите делимое: "))
val_2 = float(input("Введите делитель: "))
s_val = s_calc(val_1, val_2)
print(s_val)


# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def get_data():
    """Получает данные от пользователя. Возвращает словарь с заполненными значениями"""
    dict_data = {'name': '', 'surname': '', 'birthday': '', 'city': '', 'email': '', 'ph_number': ''}
    for f in dict_data.keys():
        el_dict = input(f'{f}: ')
        dict_data[f] = el_dict
    return dict_data


def data_values(dictionary):
    """В качестве аргумента получает словарь. Возвращает строку с значениями словаря"""
    str_values = ' '.join(dictionary.values())
    return str_values


first_user = get_data()
print(data_values(first_user))


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def my_func_task3(arg_1, arg_2, arg_3):
    if arg_1 > arg_2:
        max_1 = arg_1
        if arg_3 > arg_2:
            max_2 = arg_3
        else:
            max_2 = arg_2
    else:
        max_1 = arg_2
        if arg_3 > arg_1:
            max_2 = arg_3
        else:
            max_2 = arg_1
    if arg_1 == arg_2:
        max_1 = arg_1
        max_2 = arg_3
    elif arg_1 == arg_3:
        max_1 = arg_1
        max_2 = arg_2
    elif arg_2 == arg_3:
        max_1 = arg_1
        max_2 = arg_2
    return max_1 + max_2


print(my_func_task3(2, 3, 4))


#
# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func_task41(x, y):
    result = x ** y
    return result


def my_func_task42(x, y):
    result = 1
    for i in range(0, y):
        result = result * x
        i += 1
    return result


print(my_func_task41(2, 6))
print(my_func_task42(2, 6))

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и
# возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов,
# разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().
